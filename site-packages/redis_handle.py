import json
import collections

from .redis_utils.backends import ListRedis, BaseRedis

connection_pool_dict = {}

try:
    from django.conf import settings
    REDIS_HOST = settings.REDIS_HOST
    REDIS_PORT = settings.REDIS_PORT
    REDIS_PASSWORD = settings.REDIS_PASSWORD
    CACHE_REDIS_DB = settings.CACHE_REDIS_DB
    CELERY_BROKER_DB = settings.CELERY_BROKER_DB
except Exception:
    REDIS_HOST = '127.0.0.1'
    REDIS_PORT = '7396'
    REDIS_PASSWORD = 'ZKSoft3'
    CELERY_BROKER_DB = 1
    CACHE_REDIS_DB = 6


class TaskRedis(ListRedis):

    def lindex(self, key, index):
        key = self.client.make_key(key)
        value = self.row_client.lindex(key, index)
        return value

    def count_queue_task(self, name):
        counter = collections.Counter()
        for data in self.list_iter(name):
            task_name = json.loads(data)['headers']['task']
            counter[task_name] += 1

        return counter

    def show_info(self):
        print('\n=================================')
        print('TaskRedis: %s, size: %s' % (self._server, self.row_client.dbsize()))
        queue_info = {
            'celery': '',
            'iclock_real_time': '',
            'att_real_time': '',
        }
        for key in queue_info:
            print('%s: %s' % (key, self.row_client.llen(key)))
            counter = self.count_queue_task(key)
            print(len(counter))
            for task in counter:
                print("    %s: %s" % (task, counter[task]))

        print('=================================\n')


class CacheRedis(BaseRedis):

    def keys_count(self, name):
        return len(self.row_client.keys(name))

    def show_info(self):
        print('\n=================================')
        print('CacheRedis: %s, size: %s' % (self._server, self.row_client.dbsize()))

        keys = ['acc_', 'att_', 'base_', 'iclock_', 'metting_', 'mobile_',
                'payroll_', 'personnel_', 'visitor_',
                'workflow_', 'django.contrib.sessions', 'mysql']

        for key in keys:
            key = '*%s*' % key
            print("%s: %s" % (key, self.keys_count(key)))

        print('=================================\n')


task_redis_url = 'redis://:%s@%s:%s/%s' % (REDIS_PASSWORD, REDIS_HOST, REDIS_PORT, CELERY_BROKER_DB)
cache_redis_url = 'redis://:%s@%s:%s/%s' % (REDIS_PASSWORD, REDIS_HOST, REDIS_PORT, CACHE_REDIS_DB)
task_redis = TaskRedis(task_redis_url)
cache_redis = CacheRedis(cache_redis_url)
